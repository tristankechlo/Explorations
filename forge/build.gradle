plugins {
    id 'multiloader-loader'
    id 'net.minecraftforge.gradle' version '[6.0,6.2)'
    id 'org.spongepowered.mixin' version '0.7-SNAPSHOT'
}

mixin {
    add(sourceSets.main, "${mod_id}.refmap.json")
    config("${mod_id}.mixins.json")
}
jar.manifest.attributes.put("MixinConfigs", "${mod_id}.mixins.json")

minecraft {
    mappings channel: 'official', version: minecraft_version
    copyIdeResources = true //Calls processResources when in dev

    runs {
        client {
            workingDirectory file('runs/client')
            ideaModule "${rootProject.name}.${project.name}.main"
            taskName 'Client'
            property 'mixin.env.remapRefMap', 'true'
            property 'mixin.env.refMapRemappingFile', "${projectDir}/build/createSrgToMcp/output.srg"
            mods { modClientRun { source sourceSets.main } }
        }

        server {
            workingDirectory file('runs/server')
            ideaModule "${rootProject.name}.${project.name}.main"
            taskName 'Server'
            property 'mixin.env.remapRefMap', 'true'
            property 'mixin.env.refMapRemappingFile', "${projectDir}/build/createSrgToMcp/output.srg"
            mods { modClientRun { source sourceSets.main } }
        }
    }
}

dependencies {
    minecraft "net.minecraftforge:forge:${minecraft_version}-${forge_version}"
    annotationProcessor("org.spongepowered:mixin:0.8.5:processor")

    compileOnly group: 'com.google.auto.service', name: 'auto-service', version: auto_service_version
    annotationProcessor group: 'com.google.auto.service', name: 'auto-service', version: auto_service_version
}

jar.finalizedBy('reobfJar')

sourceSets.each {
    def dir = layout.buildDirectory.dir("sourcesSets/$it.name")
    it.output.resourcesDir = dir
    it.java.destinationDirectory = dir
}
